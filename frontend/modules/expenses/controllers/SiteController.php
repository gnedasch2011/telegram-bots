<?php

namespace frontend\modules\expenses\controllers;

use frontend\models\ResendVerificationEmailForm;
use frontend\models\VerifyEmailForm;
use frontend\modules\expenses\models\Expenses;
use frontend\modules\expenses\models\User;
use frontend\modules\expenses\models\UserChat;
use Longman\TelegramBot\Request;
use Longman\TelegramBot\Telegram;
use Yii;
use yii\base\InvalidArgumentException;
use yii\web\BadRequestHttpException;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\LoginForm;
use frontend\models\PasswordResetRequestForm;
use frontend\models\ResetPasswordForm;
use frontend\models\SignupForm;
use frontend\models\ContactForm;

/**
 * Site controller
 */
class SiteController extends Controller
{

    /**
     * {@inheritdoc}
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    /**
     * Displays homepage.
     *
     * @return mixed
     */
    public $enableCsrfValidation = false;

    public $bot_api_key = '5762279127:AAGpWwnl6ymE0vh8Crgfsydw8wtC6ryjUvc';
    public $bot_username = 'generalExpensesBot';

    public function actionIndex()
    {
        //–ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

        $request = file_get_contents("php://input");
        $data = json_decode($request, true);
        try {

            // Create Telegram API object
            $telegram = new Telegram($this->bot_api_key, $this->bot_username);

            // Handle telegram webhook request
            // $telegram->handle();
            if (isset($data['message']['from']['id'])) {
                //–±–µ—Ä—ë–º —é–∑–µ—Ä–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, —Ç–æ —Å–æ–∑–¥–∞—ë–º
                $user = User::initUser($data);

                //–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–≤—è–∑–∫—É –∫ —á–∞—Ç—É, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ —Å–æ–∑–¥–∞—ë–º –ø—Ä–∏–≤—è–∑–∫—É
                $user_chat = UserChat::initChat($data, $user);

                //–∑–∞–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –º–∞—Å–∫–µ —á–∏—Å–ª–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
                $res = Expenses::addExpenses($data, $user_chat);

                //TODO —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –∏—Ç–æ–≥–æ–º –∫—Ç–æ —Å–∫–æ–ª—å–∫–æ –¥–æ–ª–∂–µ–Ω –≤ –æ–±—â–∞–∫ –∏–ª–∏ —Å–∫–æ–ª—å–∫–æ –¥–æ–ª–∂–Ω—ã –µ–º—É, –∞ —Ç–∞–∫ –∂–µ –∫–Ω–æ–ø–∫–∞–º–∏ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å –∏ –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å –∏—Ç–æ–≥ –º–µ—Å—è—Ü–∞, —Ç–∞–∫ –∂–µ —Å–¥–µ–ª–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–∞

                // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–≤–æ–¥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–∏–ø–∞ –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–∑ –æ—Ç–¥–∞—á–µ–π view
                //–ú–æ–¥–µ–ª—å ConfigView


                $commonExpenses = $user_chat->commonExpenses;
                $usersExpenses = $user_chat->usersExpenses;
                $countUsers = count($usersExpenses);

                foreach ($usersExpenses as &$user) {
                    $user['commonEx'] = round($user['commonEx']-($commonExpenses[0]['commonEx'] / $countUsers));

                }
                //–ö–Ω–æ–ø–∫–∏ <—Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—á—ë—Ç —Å–µ–π—á–∞—Å>

                //–ö–Ω–æ–ø–∫–∏ <–≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ —Ç—Ä–∞—Ç—ã>
                //–ö–æ–º–º–µ–Ω—Ç —Å—É–º–º–∞ –¥–∞—Ç–∞, –ø–æ –¥–∞—Ç–µ

                // –ê –µ—Å–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å jpg, –≥—Ä–∞—Ñ–∏–∫–∞–º–∏ –∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏

                $view = $this->renderPartial('resultExpenses', [
                    'commonExpenses' => $commonExpenses,
                    'usersExpenses' => $usersExpenses,
                ]);
                //return $this->renderAjax('view');

                $result = Request::sendMessage([
                    'chat_id' => $user_chat->chat_id,
                    'text' => $view,
                    'parse_mode' => 'html',
                ]);
                
                echo "<pre>"; print_r($result);die();

            }

//            $result = Request::sendMessage([
//                'chat_id' => 725086949,
//                'text'    => 'Your utf8 text üòú ...',
//            ]);

        } catch (Longman\TelegramBot\Exception\TelegramException $e) {
            // Silence is golden!
            // log telegram errors
            echo $e->getMessage();
        }

    }

    public function actionView()
    {
        Yii::$app->response->headers->set('Content-type', 'image/png');

        $largeurImage = 480;
        $hauteurImage = 640;
        $im = ImageCreate($largeurImage, $hauteurImage) or die ("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");
        $noir = ImageColorAllocate($im, 0, 0, 0);

        // –ø—Ä–æ–≤–æ–¥–∏–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—É—é –ª–∏–Ω–∏—é, –æ—Å—å –∞–±—Å—Ü–∏—Å—Å (–≤—Ä–µ–º—è)
        ImageLine($im, 10, $hauteurImage - 10, $largeurImage - 10, $hauteurImage - 10, $noir);

        // –ø—Ä–æ–≤–æ–¥–∏–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é –ª–∏–Ω–∏—é, —á—Ç–æ–±—ã –æ—Å—å –æ—Ä–¥–∏–Ω–∞—Ç (—á–∏—Å–ª–æ –ø–æ—Å–µ—â–µ–Ω–∏–π)
        ImageLine($im, 10, 10, 10, $hauteurImage - 10, $noir);

        ImagePng($im);
    }

}
